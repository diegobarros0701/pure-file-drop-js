(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 1 */,
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./src/pure-file-drop.scss
var pure_file_drop = __webpack_require__(0);

// CONCATENATED MODULE: ./src/utils/simple-ajax.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var SimpleAjax =
/*#__PURE__*/
function () {
  function SimpleAjax() {
    _classCallCheck(this, SimpleAjax);

    this.options = {
      method: 'GET',
      url: null,
      async: true,
      data: '',
      responseType: 'text',
      headers: [],
      onError: function onError(response, xhr) {},
      onSuccess: function onSuccess(response, xhr) {},
      onComplete: function onComplete(response, xhr) {},
      beforeSend: function beforeSend(xhr) {}
    };
  }

  _createClass(SimpleAjax, [{
    key: "_setRequestHeaders",
    value: function _setRequestHeaders(xhr) {
      this.options.headers.forEach(function (header) {
        return xhr.setRequestHeader(header.name, header.value);
      });
    }
  }, {
    key: "request",
    value: function request() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var _this = this;

      _this._overrideOptionsProperties(options);

      if (_this._isOptionsValid()) {
        var xhr = new XMLHttpRequest();
        xhr.open(_this.options.method, _this.options.url, _this.options.async);

        xhr.onreadystatechange = function () {
          var status = this.status.toString();

          if (this.readyState == 4) {
            var response = this.response;

            if (status.startsWith('2')) {
              if (_this.options.responseType === 'json') {
                response = JSON.parse(response);
              }

              _this.options.onSuccess(response, this);
            } else if (status.startsWith('4') || status.startsWith('5')) {
              console.error(status, ' - ', this.statusText);

              _this.options.onError(response, this);
            }

            _this.options.onComplete(response, this);

            console.log(xhr.getAllResponseHeaders());
          }
        };

        if (_this.options.method === 'POST' && typeof _this.options.data === 'string') {
          xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        }

        this._setRequestHeaders(xhr);

        this.options.beforeSend(xhr);
        xhr.send(_this.options.data);
      } else {
        console.error('ERROR - Specify the options correctly');
      }
    }
  }, {
    key: "_overrideOptionsProperties",
    value: function _overrideOptionsProperties(custom_options) {
      for (var option_key in custom_options) {
        if (this.options.hasOwnProperty(option_key)) this.options[option_key] = custom_options[option_key];
      }
    }
  }, {
    key: "_isOptionsValid",
    value: function _isOptionsValid() {
      if (typeof this.options.url !== 'string' || this.options.url == null || this.options.url.trim() === '') return false;
      return true;
    }
  }]);

  return SimpleAjax;
}();

var simpleAjax = new SimpleAjax();

// CONCATENATED MODULE: ./src/utils/dom-handler.js
function dom_handler_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function dom_handler_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function dom_handler_createClass(Constructor, protoProps, staticProps) { if (protoProps) dom_handler_defineProperties(Constructor.prototype, protoProps); if (staticProps) dom_handler_defineProperties(Constructor, staticProps); return Constructor; }

var DOMHandler =
/*#__PURE__*/
function () {
  function DOMHandler() {
    dom_handler_classCallCheck(this, DOMHandler);
  }

  dom_handler_createClass(DOMHandler, [{
    key: "closest",
    value: function closest(node, parent_selector) {
      var parentNode = node.parentNode;

      if (parent_selector.startsWith('.')) {
        parent_selector = parent_selector.substring(1);

        while (parentNode && !parentNode.className.includes(parent_selector)) {
          parentNode = parentNode.parentNode;
        }
      } else if (parent_selector.startsWith('#')) {
        parent_selector = parent_selector.substring(1);

        while (parentNode && parentNode.getAttribute('id') !== parent_selector) {
          parentNode = parentNode.parentNode;
        }
      } else {
        while (parentNode && parentNode.nodeName.toLowerCase() !== parent_selector) {
          parentNode = parentNode.parentNode;
        }
      }

      return node.parentNode == parentNode ? parentNode : null;
    }
  }, {
    key: "index",
    value: function index(node) {
      var siblings = 0;

      while (node) {
        node = node.previousSibling;
        siblings++;
      }

      siblings--; // para não contar o próprio elemento que originou a contagem

      return siblings;
    }
  }, {
    key: "isParent",
    value: function isParent(parent, node) {
      while (node) {
        node = node.parentNode;
        if (node == parent) return true;
      }

      return false;
    }
  }]);

  return DOMHandler;
}();

var domHandler = new DOMHandler();

// CONCATENATED MODULE: ./src/utils/event-js.js
function event_js_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function event_js_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function event_js_createClass(Constructor, protoProps, staticProps) { if (protoProps) event_js_defineProperties(Constructor.prototype, protoProps); if (staticProps) event_js_defineProperties(Constructor, staticProps); return Constructor; }



var event_js_EventJS =
/*#__PURE__*/
function () {
  function EventJS() {
    event_js_classCallCheck(this, EventJS);
  }

  event_js_createClass(EventJS, [{
    key: "on",
    value: function on(eventName, selector, callback) {
      var _this = this;

      this._element.addEventListener(eventName, function (e) {
        var element_selector = document.querySelector(selector);

        if (_this._isTheTarget(e.target, element_selector)) {
          callback(e);
        }
      });
    }
  }, {
    key: "node",
    value: function node(element) {
      this._element = element;
      return this;
    } // To be the target, needs to be the same as the target and must be child of the element caller

  }, {
    key: "_isTheTarget",
    value: function _isTheTarget(target, element_selector) {
      return target == element_selector && domHandler.isParent(this._element, element_selector);
    }
  }]);

  return EventJS;
}();

var eventJS = new event_js_EventJS();

// CONCATENATED MODULE: ./src/pure-file-drop.js
function pure_file_drop_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function pure_file_drop_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function pure_file_drop_createClass(Constructor, protoProps, staticProps) { if (protoProps) pure_file_drop_defineProperties(Constructor.prototype, protoProps); if (staticProps) pure_file_drop_defineProperties(Constructor, staticProps); return Constructor; }





var pure_file_drop_PureFileDrop =
/*#__PURE__*/
function () {
  function PureFileDrop() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    pure_file_drop_classCallCheck(this, PureFileDrop);

    this.options = {
      form_selector: 'form[data-file-choose-form]',
      // default
      file_drop_selector: '.pure-file-drop',
      // default
      file_drop_area_text: 'Arraste os arquivos ou clique aqui',
      upload_url: null,
      // default is the form action attribute
      async_request: true,
      // default
      param_name: 'file',
      // default
      form_ajax: true,
      // TO DO
      upload_on_drop: false,
      // TO DO
      select_by_click: true,
      // default
      onSuccess: function onSuccess(data) {},
      onError: function onError(data) {},
      onComplete: function onComplete(data) {}
    };
    this._files_selected = [];

    this._overrideOptionsProperties(options);

    this._build();
  }

  pure_file_drop_createClass(PureFileDrop, [{
    key: "_build",
    value: function _build() {
      this._form = document.querySelector(this.options.form_selector);
      var drop_zone_text = document.createElement('span');
      drop_zone_text.innerText = this.options.file_drop_area_text;
      this._pure_file_drop_container = document.querySelector(this.options.file_drop_selector);
      this._drop_zone_area = document.createElement('div');
      this._drop_zone_area.className = 'drop-zone';

      this._drop_zone_area.appendChild(drop_zone_text);

      if (this.options.select_by_click) {
        this._drop_zone_file_input = document.createElement('input');

        this._drop_zone_file_input.setAttribute('type', 'file');

        this._drop_zone_file_input.setAttribute('multiple', true);

        this._drop_zone_area.appendChild(this._drop_zone_file_input);
      }

      this._pure_file_drop_container.appendChild(this._drop_zone_area);

      if (this._form) {
        this._form.enctype = 'multipart/form-data';
        if (this.options.upload_url) this._form.action = this.options.upload_url;

        this._initializeEvents();
      }
    }
  }, {
    key: "_overrideOptionsProperties",
    value: function _overrideOptionsProperties(custom_options) {
      for (var option_key in custom_options) {
        if (this.options.hasOwnProperty(option_key)) this.options[option_key] = custom_options[option_key];
      }
    }
  }, {
    key: "_initializeEvents",
    value: function _initializeEvents() {
      var _this2 = this;

      this._form.addEventListener('submit', function (e) {
        e.preventDefault();

        _this2._sendForm();
      });

      this._drop_zone_area.addEventListener('dragenter', function (e) {
        _this2._drop_zone_area.className += ' dragging';
      });

      this._drop_zone_area.addEventListener('dragover', function (e) {
        return e.preventDefault();
      });

      this._drop_zone_area.addEventListener('drop', function (e) {
        e.preventDefault();
        _this2._drop_zone_area.className = _this2._drop_zone_area.className.replace(/\s*.(dragging)/g, '');

        _this2._handleFiles(e.dataTransfer.files, e);
      });

      this._drop_zone_area.addEventListener('dragleave', function (e) {
        _this2._drop_zone_area.className = _this2._drop_zone_area.className.replace(/\s*.(dragging)/g, '');
      });

      eventJS.node(this._pure_file_drop_container).on('click', 'button[data-remove-file-drop]', function (e) {
        _this2._removeFile(e);
      });

      if (this.options.select_by_click) {
        var _this = this;

        this._drop_zone_area.addEventListener('click', function (e) {
          _this._drop_zone_file_input.click();
        });

        this._drop_zone_file_input.addEventListener('change', function (e) {
          _this2._handleFiles(e.target.files, e);

          e.target.value = "";
        });
      }
    }
  }, {
    key: "_removeFile",
    value: function _removeFile(e) {
      var parent_index = domHandler.index(e.target.parentNode);

      this._files_selected.splice(parent_index, 1);

      this._files_dropped_area.removeChild(e.target.parentNode);

      if (this._files_dropped_area.children.length == 0) {
        this._pure_file_drop_container.removeChild(this._files_dropped_area);

        this._files_dropped_area = null;
      }
    }
  }, {
    key: "_handleFiles",
    value: function _handleFiles(files, e) {
      e.preventDefault();

      for (var i = 0; i < files.length; i++) {
        var file = files[i];
        var filename_span = document.createElement('span');
        filename_span.innerText = file.name;
        var btn_remove_file_drop = document.createElement('button');
        btn_remove_file_drop.setAttribute('type', 'button');
        btn_remove_file_drop.className = 'btn btn-danger';
        btn_remove_file_drop.innerText = 'Remover';
        btn_remove_file_drop.dataset.removeFileDrop = 'remove-file-drop';
        var single_file_wrapper_element = document.createElement('div');
        single_file_wrapper_element.className = 'single-file';
        single_file_wrapper_element.appendChild(filename_span);
        single_file_wrapper_element.appendChild(btn_remove_file_drop);

        if (!this._files_dropped_area) {
          this._files_dropped_area = document.createElement('div');
          this._files_dropped_area.className = 'files-dropped';

          this._pure_file_drop_container.appendChild(this._files_dropped_area);
        }

        this._files_dropped_area.appendChild(single_file_wrapper_element);

        this._files_selected.push(file);
      }
    }
  }, {
    key: "_sendForm",
    value: function _sendForm() {
      var _this3 = this;

      console.log('Requesting...');
      simpleAjax.request({
        url: this.options.upload_url,
        method: 'POST',
        data: this._getFormData(),
        onError: function onError(response) {
          _this3.options.onError(response);
        },
        onSuccess: function onSuccess(response) {
          _this3.options.onSuccess(response);
        },
        onComplete: function onComplete(response) {
          _this3.options.onComplete(response);
        }
      });
    }
  }, {
    key: "_getFormData",
    value: function _getFormData() {
      var _this = this;

      var formData = new FormData(_this._form);

      _this._files_selected.forEach(function (file_selected) {
        formData.append(_this.options.param_name, file_selected);
      });

      return formData;
    }
  }]);

  return PureFileDrop;
}();


// CONCATENATED MODULE: ./entry.js
/* concated harmony reexport PureFileDrop */__webpack_require__.d(__webpack_exports__, "PureFileDrop", function() { return pure_file_drop_PureFileDrop; });



/***/ })
/******/ ]);
});